{"version":3,"file":"MarginDecorator-624582c6.js","sources":["../../src/lib/components/widgets/demo/LoadingRow.svelte","../../src/lib/components/widgets/demo/Task.svelte","../../src/lib/components/widgets/demo/PureTaskList.svelte","../../src/lib/components/widgets/demo/Store.js","../../src/lib/components/widgets/demo/TaskList.svelte","../../src/lib/components/widgets/demo/InboxScreen.svelte","../../src/lib/components/widgets/demo/MarginDecorator.svelte"],"sourcesContent":["<div class=\"loading-item\">\n\t<span class=\"glow-checkbox\" />\n\t<span class=\"glow-text\">\n\t\t<span>Loading</span>\n\t\t<span>cool</span>\n\t\t<span>state</span>\n\t</span>\n</div>\n","<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\tconst dispatch = createEventDispatcher();\n\n\t// Event handler for Pin Task\n\tfunction PinTask() {\n\t\tdispatch('onPinTask', {\n\t\t\tid: task.id\n\t\t});\n\t}\n\t// Event handler for Archive Task\n\tfunction ArchiveTask() {\n\t\tdispatch('onArchiveTask', {\n\t\t\tid: task.id\n\t\t});\n\t}\n\n\t// Task props\n\texport let task = {\n\t\tid: '',\n\t\ttitle: '',\n\t\tstate: ''\n\t};\n\n\t// Reactive declaration (computed prop in other frameworks)\n\t$: isChecked = task.state === 'TASK_ARCHIVED';\n</script>\n\n<div class=\"list-item {task.state}\">\n\t<label for=\"checked\" class=\"checkbox\" aria-label={`archiveTask-${task.id}`}>\n\t\t<input\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={isChecked}\n\t\t\tdisabled\n\t\t\tname=\"checked\"\n\t\t\tid={`archiveTask-${task.id}`}\n\t\t/>\n\t\t<span class=\"checkbox-custom\" on:click={ArchiveTask} />\n\t</label>\n\n\t<label for=\"title\" aria-label={task.title} class=\"title\">\n\t\t<input type=\"text\" value={task.title} readonly name=\"title\" placeholder=\"Input title\" />\n\t</label>\n\n\t{#if task.state !== 'TASK_ARCHIVED'}\n\t\t<button\n\t\t\tclass=\"pin-button\"\n\t\t\ton:click|preventDefault={PinTask}\n\t\t\tid={`pinTask-${task.id}`}\n\t\t\taria-label={`pinTask-${task.id}`}\n\t\t>\n\t\t\t<span class=\"icon-star\" />\n\t\t</button>\n\t{/if}\n</div>\n","<script>\n\timport LoadingRow from './LoadingRow.svelte';\n\timport Task from './Task.svelte';\n\texport let loading = false;\n\texport let tasks = [];\n\n\t//ðŸ‘‡ Reactive declarations (computed props in other frameworks)\n\t$: noTasks = tasks.length === 0;\n\t$: emptyTasks = noTasks && !loading;\n\t$: tasksInOrder = [\n\t\t...tasks.filter((t) => t.state === 'TASK_PINNED'),\n\t\t...tasks.filter((t) => t.state !== 'TASK_PINNED')\n\t];\n</script>\n\n{#if loading}\n\t<div class=\"list-items\">\n\t\t<LoadingRow />\n\t\t<LoadingRow />\n\t\t<LoadingRow />\n\t\t<LoadingRow />\n\t\t<LoadingRow />\n\t</div>\n{/if}\n{#if emptyTasks}\n\t<div class=\"list-items\">\n\t\t<div class=\"wrapper-message\">\n\t\t\t<span class=\"icon-check\" />\n\t\t\t<p class=\"title-message\">You have no tasks</p>\n\t\t\t<p class=\"subtitle-message\">Sit back and relax</p>\n\t\t</div>\n\t</div>\n{/if}\n{#each tasksInOrder as task}\n\t<Task {task} on:onPinTask on:onArchiveTask />\n{/each}\n","// A simple Svelte store implementation with update methods and initial data.\n// A true app would be more complex and separated into different files.\n\nimport { writable } from 'svelte/store';\n\nconst TaskBox = () => {\n\t// Creates a new writable store populated with some initial data\n\tconst { subscribe, update } = writable([\n\t\t{ id: '1', title: 'Something', state: 'TASK_INBOX' },\n\t\t{ id: '2', title: 'Something more', state: 'TASK_INBOX' },\n\t\t{ id: '3', title: 'Something else', state: 'TASK_INBOX' },\n\t\t{ id: '4', title: 'Something again', state: 'TASK_INBOX' }\n\t]);\n\n\treturn {\n\t\tsubscribe,\n\n\t\t// Method to archive a task, think of a action with redux or Pinia\n\t\tarchiveTask: (id) =>\n\t\t\tupdate((tasks) =>\n\t\t\t\ttasks\n\t\t\t\t\t.map((task) => (task.id === id ? { ...task, state: 'TASK_ARCHIVED' } : task))\n\t\t\t\t\t.filter((t) => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED')\n\t\t\t),\n\n\t\t// Method to archive a task, think of a action with redux or Pinia\n\t\tpinTask: (id) =>\n\t\t\tupdate((tasks) =>\n\t\t\t\ttasks.map((task) => (task.id === id ? { ...task, state: 'TASK_PINNED' } : task))\n\t\t\t)\n\t};\n};\nexport const taskStore = TaskBox();\n\n// Store to handle the app state\nconst AppState = () => {\n\tconst { subscribe, update } = writable(false);\n\treturn {\n\t\tsubscribe,\n\t\terror: () => update((error) => !error)\n\t};\n};\n\nexport const AppStore = AppState();\n","<script>\n\timport PureTaskList from './PureTaskList.svelte';\n\timport { taskStore } from './Store.js';\n\n\tfunction onPinTask(event) {\n\t\ttaskStore.pinTask(event.detail.id);\n\t}\n\tfunction onArchiveTask(event) {\n\t\ttaskStore.archiveTask(event.detail.id);\n\t}\n</script>\n\n<PureTaskList tasks={$taskStore} on:onPinTask={onPinTask} on:onArchiveTask={onArchiveTask} />\n","<script>\n\timport TaskList from './TaskList.svelte';\n\texport let error = false;\n</script>\n\n<div>\n\t{#if error}\n\t\t<div class=\"page lists-show\">\n\t\t\t<div class=\"wrapper-message\">\n\t\t\t\t<span class=\"icon-face-sad\" />\n\t\t\t\t<div class=\"title-message\">Oh no!</div>\n\t\t\t\t<div class=\"subtitle-message\">Something went wrong</div>\n\t\t\t</div>\n\t\t</div>\n\t{:else}\n\t\t<div class=\"page lists-show\">\n\t\t\t<nav>\n\t\t\t\t<h1 class=\"title-page\">\n\t\t\t\t\t<span class=\"title-wrapper\">Taskbox</span>\n\t\t\t\t</h1>\n\t\t\t</nav>\n\t\t\t<TaskList />\n\t\t</div>\n\t{/if}\n</div>\n","<div>\n\t<slot />\n</div>\n\n<style>\n\tdiv {\n\t\tmargin: 3em;\n\t}\n</style>\n"],"names":["insert_hydration","target","div","anchor","append_hydration","span0","span4","span1","span2","span3","attr","button","button_id_value","ctx","button_aria_label_value","span","dirty","create_if_block","input0","input0_id_value","label0","label0_aria_label_value","input1","input1_value_value","label1","label1_aria_label_value","div_class_value","dispatch","createEventDispatcher","PinTask","task","ArchiveTask","$$props","isChecked","div1","div0","p0","p1","create_if_block_1","i","each_blocks","loading","tasks","noTasks","$$invalidate","emptyTasks","tasksInOrder","t","TaskBox","subscribe","update","writable","id","taskStore","onPinTask","event","onArchiveTask","nav","h1","div3","div2","error"],"mappings":"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"}